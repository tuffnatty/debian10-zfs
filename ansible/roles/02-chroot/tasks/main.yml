---
- debug:
    var: zfsprep_efi|default(false, true)

- name: install locales
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ zfsprep_locales }}"

- name: set LANG in /etc/default/locale
  lineinfile:
    line: "LANG={{ zfsprep_lang }}"
    path: /etc/default/locale
    insertafter: EOF

- name: set timezone
  timezone:
    name: "{{ zfsprep_timezone }}"

- name: reconfigure tzdata package
  command: dpkg-reconfigure -f noninteractive tzdata

- name: ln -s /proc/self/mounts /etc/mtab
  file:
    src: /proc/self/mounts
    dest: /etc/mtab
    state: link

- name: update apt cache
  apt:
    update_cache: yes

- name: install our kernel
  apt:
    name: "{{ zfsprep_kernel_package }}"
    install_recommends: no
    state: present

- name: install zfs-initramfs
  apt:
    name: zfs-initramfs
    state: present

- name: install grub-pc
  apt:
    name: grub-pc
    state: present
  when: not zfsprep_efi | default(false, true)

- name: install dosfstools
  apt:
    name: dosfstools
    state: present

- name: set up grub partitions for efi
  command: "mkdosfs -F32 -n EFI {{ item }}"
  with_items:
    - "{{ zfsprep_root_device_list | map('regex_replace', '$', zfsprep_efi_part_append) | list  }}"

- name: create efi mountpoint
  file:
    path: /boot/efi
    state: directory

- name: get efi partition uuid
  command: "blkid -s PARTUUID -o value {{ disk }}"
  register: efi_blkid
  vars:
    disk: "{{ zfsprep_root_device_list | map('regex_replace', '$', zfsprep_efi_part_append) | list | first }}"

- name: update fstab with efi partition
  mount:
    path: /boot/efi
    src: PARTUUID={{ efi_blkid.stdout }}
    fstype: vfat
    opts: nofail,x-systemd.device-timeout=1
    dump: 0
    passno: 1
    state: mounted

- name: update fstab entry for boot volume
  mount:
    path: /boot
    src: "{{ zfsprep_boot_pool}}/BOOT/ubuntu"
    fstype: zfs
    opts: nodev,relatime,x-systemd.requires=zfs-import-bpool.service
    dump: 0
    passno: 0
    state: present

- name: update fstab entries for select rpool volumes
  mount:
    path: "{{ item }}"
    src: "{{ zfsprep_root_pool}}{{ item }}"
    fstype: zfs
    opts: defaults
    dump: 0
    passno: 0
    state: present
  with_items:
    - /tmp
    - /var/log
    - /var/spool
    - /var/tmp

- name: get backup efi partition uuid
  command: "blkid -s PARTUUID -o value {{ item }}"
  register: efi_backup_blkid
  with_items:
    - "{{ (zfsprep_root_device_list | map('regex_replace', '$', zfsprep_efi_part_append) | list)[1:] }}"
  when: zfsprep_efi | default(false, true)

- name: update fstab with backup efi partitions
  mount:
    path: /boot/efi
    src: PARTUUID={{ item.stdout }}
    fstype: vfat
    opts: noauto,nofail,x-systemd.device-timeout=1
    dump: 0
    passno: 1
    state: present
  when: zfsprep_efi | default(false, true)
  loop: "{{ efi_backup_blkid.results }}"

- name: install grub-efi-amd64
  apt:
    name: grub-efi-amd64
    state: present
  when: zfsprep_efi | default(false, true)

- name: set root password
  user:
    name: root
    password: "{{ zfsprep_root_password_hash }}"

#- name: fix mount race condition
#  command: "zfs set mountpoint=legacy {{ item }}"
#  with_items:
#    - "{{ zfsprep_boot_pool }}/BOOT/ubuntu"
#    - "{{ zfsprep_root_pool }}/tmp"
#    - "{{ zfsprep_root_pool }}/var/log"
#    - "{{ zfsprep_root_pool }}/var/spool"
#    - "{{ zfsprep_root_pool }}/var/tmp"

#- name: update fstab entries for boot volume
#  lineinfile:
#    line: "{{ zfsprep_boot_pool}}/BOOT/ubuntu /boot zfs nodev,relatime,x-systemd.requires=zfs-import-bpool.service 0 0"
#    path: /etc/fstab
#    insertafter: EOF

#- name: update fstab entries for select rpool volumes
#  lineinfile:
#    line: "{{ zfsprep_root_pool}}{{ item }} {{ item }} zfs defaults 0 0"
#    path: /etc/fstab
#    insertafter: EOF
#  with_items:
#    - /tmp
#    - /var/log
#    - /var/spool
#    - /var/tmp

- name: create swap zvol
  zfs:
    name: "{{ zfsprep_root_pool }}/swap "
    state: present
    extra_zfs_properties:
      "{{ zfsprep_swap_opts }}"

- name: mkswap
  command: "mkswap -f /dev/zvol/{{ zfsprep_root_pool }}/swap"
  when: zfsprep_swap | default(false, true)

- name: write swap entry in fstab
  mount:
    backup: yes
    path: none
    src: /dev/zvol/{{ zfsprep_root_pool }}/swap
    fstype: swap
    opts: defaults
    passno: 0
    dump: 0
    state: present
  when: zfsprep_swap | default(false, true)

- name: swapon
  command: swapon -av
  when: zfsprep_swap | default(false, true)

- lineinfile:
    line: "RESUME=none"
    path: /etc/initramfs-tools/conf.d/resume
    create: yes
    state: present
  when: zfsprep_swap | default(false, true)

- name: update initramfs
  command: "update-initramfs -u -k all"

- name: modify /etc/default/grub
  replace:
    path: /etc/default/grub
    regexp: "{{ item.regex }}"
    replace: "{{ item.replace }}"
  with_items:
    - regex: "^(GRUB_HIDDEN_TIMEOUT.*)"
      replace: "#\\1"
    - regex: "^GRUB_CMDLINE_LINUX_DEFAULT=.*"
      replace: 'GRUB_CMDLINE_LINUX_DEFAULT=""'
    - regex: "^GRUB_CMDLINE_LINUX=.*"
      replace: 'GRUB_CMDLINE_LINUX="{{ zfsprep_grub_cmdline }}"'
    - regex: "^#(GRUB_TERMINAL.*)"
      replace: "\\1"

- name: update grub
  command: update-grub

- name: grub install
  command: "grub-install {{ item }}"
  with_items:
    - "{{ zfsprep_root_device_list }}"
  when: not zfsprep_efi | default(false, true)

- name: install grub efi on primary disk
  command: "grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ubuntu --recheck --no-floppy"
  when: zfsprep_efi | default(false, true)

- name: unmount boot efi partition
  mount:
    path: /boot/efi
    state: unmounted

- name: write grub boot sector
  command: "dd if={{ zfsprep_root_device_list | map('regex_replace', '$', zfsprep_efi_part_append) | list | first }} of={{ item }}"
  with_items:
    - "{{ (zfsprep_root_device_list | map('regex_replace', '$', zfsprep_efi_part_append) | list)[1:] }}"
  when: (zfsprep_efi | default(false, true)) and (zfsprep_root_device_list | length > 1)

- name: setup efi on secondary disks
  command: "efibootmgr -c -g -d {{ item.0 }} -p 4 -L 'ubuntu-{{ item.1 }}' -l '\\EFI\\Ubuntu\\grubx64.efi'"
  with_together:
    - "{{ zfsprep_root_device_list[1:] }}"
    - "{{ zfsprep_root_disks[1:] }}"
  when: (zfsprep_efi|default(false, true)) and (zfsprep_root_device_list | length > 1)

- name: mount boot efi partition
  command: mount /boot/efi

- name: ensure zfs.target starts on boot
  systemd:
    name: zfs.target
    enabled: yes

- name: install zfs-import-bpool.service
  template:
    src: zfs-import-bpool.j2
    dest: /lib/systemd/system/zfs-import-bpool.service
    mode: 0644

- name: enable zfs-import-bpool service
  systemd:
    name: zfs-import-bpool.service
    enabled: yes

- name: install firstboot service
  template:
    src: firstboot.service.j2
    dest: /lib/systemd/system/firstboot.service

- name: install firstboot script
  template:
    src: firstboot.j2
    dest: /opt/firstboot
    mode: 0777

- name: enable firstboot service
  systemd:
    name: firstboot.service
    enabled: yes

- name: enable systemd-networkd service
  systemd:
    name: systemd-networkd
    enabled: yes
