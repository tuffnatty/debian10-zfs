---
- name: ensure live system has necessary packages installed
  apt:
    name: ['mdadm','debootstrap','gdisk','zfs-initramfs']
    state: present

- name: clear superblocks
  command: "mdadm --zero-superblock --force {{ item }}"
  with_items:
    - "{{ zfsprep_target_disks }}"
  when: zfsprep_zap_disks | default(false, true)

- name: clear gpt tables
  command: "sgdisk --zap-all {{ item }}"
  with_items:
    - "{{ zfsprep_target_disks }}"
  when: zfsprep_zap_disks | default(false, true)

- name: set up root disk partitions
  command: "sgdisk {{ zfsprep_partition_flags }} {{ item }}"
  with_items:
    - "{{ zfsprep_root_device_list }}"

- name: create boot zpool
  command: "zpool create {{ zfsprep_boot_pool_opts }} {{ zfsprep_boot_pool }} {{ zfsprep_boot_pool_type }} {{ zfsprep_root_device_list | map('regex_replace', '$', zfsprep_boot_part_append) | list | join(' ') }}"

- name: create root zpool
  command: "zpool create {{ zfsprep_root_pool_opts }} {{ zfsprep_root_pool }} {{ zfsprep_root_pool_type }} {{ zfsprep_root_device_list | map('regex_replace', '$', zfsprep_root_part_append) | list | join(' ') }}"

- name: create boot dataset
  zfs:
    name: "{{ zfsprep_boot_pool }}/BOOT"
    state: present
    extra_zfs_properties:
      canmount: off
      mountpoint: none

- name: create root dataset
  zfs:
    name: "{{ zfsprep_root_pool }}/ROOT"
    state: present
    extra_zfs_properties:
      canmount: off
      mountpoint: none

- name: create boot filesystem
  zfs:
    name: "{{ zfsprep_boot_pool }}/BOOT/ubuntu"
    state: present
    extra_zfs_properties:
      canmount: noauto
      mountpoint: legacy

- name: create root filesystem
  zfs:
    name: "{{ zfsprep_root_pool }}/ROOT/ubuntu"
    state: present
    extra_zfs_properties:
      canmount: noauto
      mountpoint: /

- name: manually mount rpool/ROOT/ubuntu before creating other mountpoints
  command: "zfs mount {{ zfsprep_root_pool }}/ROOT/ubuntu"

- name: create boot directory
  file:
    path: /mnt/boot
    state: directory

- name: manually mount bpool/ROOT/ubuntu before creating other mountpoints
  command: "mount -t zfs {{ zfsprep_boot_pool }}/BOOT/ubuntu /mnt/boot"

- name: create rpool child filesystems
  zfs:
    name: "{{ item.name }}"
    state: present
    extra_zfs_properties:
      "{{ item.properties }}"
  with_items:
    - "{{ zfsprep_root_volumes }}"

- name: create mountpoints for rpool filesystems with legacy mountpoints
  file:
    path: "/mnt{{ item }}"
    state: directory
  with_items:
    - /tmp
    - /var
    - /var/log
    - /var/spool
    - /var/tmp

- name: mount rpool filesystems with legacy mountpoints
  command: "mount -t zfs {{ zfsprep_root_pool }}{{ item }} /mnt{{ item }}"
  with_items:
    - /tmp
    - /var/log
    - /var/spool
    - /var/tmp

- name: chmod 01777 /mnt/var/tmp
  file:
    path: /mnt/var/tmp
    mode: 01777

- name: chmod 01777 /mnt/tmp
  file:
    path: /mnt/tmp
    mode: 01777

- name: run debootstrap
  command: "debootstrap {{ zfsprep_ubuntu_release }} /mnt"

- name: run zfs set devices=off for root pool
  command: "zfs set devices=off {{ zfsprep_root_pool }}"

- name: write /etc/hostname in chroot
  copy:
    content: "{{ zfsprep_hostname.short }}"
    dest: /mnt/etc/hostname

- name: write default network config in chroot
  template:
    src: network.j2
    dest: "/mnt/etc/systemd/network/{{ zfsprep_netplan_interface }}.network"

- name: write /etc/apt/sources.list in chroot
  template:
    src: sources.j2
    dest: /mnt/etc/apt/sources.list

- name: add hostname entries to /etc/hosts in chroot
  lineinfile:
    line: "127.0.0.1 {{ zfsprep_hostname.short }} {{ zfsprep_hostname.long }}"
    path: /mnt/etc/hosts
    state: present
    insertbefore: BOF

- name: mount special filesystems for chroot
  command: "mount --rbind {{ item }}"
  with_items:
    - /dev /mnt/dev
    - /proc /mnt/proc
    - /sys /mnt/sys
  args:
    warn: false
